//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    using System.Data.Objects;

    public partial class RaceCenterDbContext : DbContext
    {
        public RaceCenterDbContext()
            : base("name=RaceCenterDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Result> Results { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Registration> Registrations { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Race> Races { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Chronometer> Chronometers { get; set; }
        public virtual DbSet<Runner> Runners { get; set; }
        public virtual DbSet<Organizer> Organizers { get; set; }

        //[DbFunction("RaceCenterDbContext", "GetEventChronometers")]
        public virtual IQueryable<string> GetEventChronometers(Nullable<int> p_Event_ID)
        {
            var p_Event_IDParameter = p_Event_ID.HasValue ?
                new ObjectParameter("P_Event_ID", p_Event_ID) :
                new ObjectParameter("P_Event_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[RaceCenterDbContext].[GetEventChronometers](@P_Event_ID)", p_Event_IDParameter);
        }
    
        //[DbFunction("RaceCenterDbContext", "GetTotalRegistrationPayments")]
        public virtual IQueryable<Nullable<decimal>> GetTotalRegistrationPayments(string p_Runner_Email, Nullable<int> p_Race_ID)
        {
            var p_Runner_EmailParameter = p_Runner_Email != null ?
                new ObjectParameter("P_Runner_Email", p_Runner_Email) :
                new ObjectParameter("P_Runner_Email", typeof(string));
    
            var p_Race_IDParameter = p_Race_ID.HasValue ?
                new ObjectParameter("P_Race_ID", p_Race_ID) :
                new ObjectParameter("P_Race_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<decimal>>("[RaceCenterDbContext].[GetTotalRegistrationPayments](@P_Runner_Email, @P_Race_ID)", p_Runner_EmailParameter, p_Race_IDParameter);
        }
    
        public virtual int ConsolidateStartersList(Nullable<int> race_ID)
        {
            var race_IDParameter = race_ID.HasValue ?
                new ObjectParameter("Race_ID", race_ID) :
                new ObjectParameter("Race_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsolidateStartersList", race_IDParameter);
        }
    
        public virtual int GetRunnerExpenses(string runner_email, ObjectParameter total_Expense)
        {
            var runner_emailParameter = runner_email != null ?
                new ObjectParameter("Runner_email", runner_email) :
                new ObjectParameter("Runner_email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetRunnerExpenses", runner_emailParameter, total_Expense);
        }
    }
}
